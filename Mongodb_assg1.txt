Insert Documents-
=============
Insert the following documents into a movies collection.

1. title : Fight Club
writer : Chuck Palahniuko
year : 1999
actors : [
 Brad Pitt
 Edward Norton
]
db.movies.insert({title:'Fight Club',writer:'Chuck Palahniuko',year:1999,actors:['Brad Pitt','Edward Norton']})

2. title : Pulp Fiction
writer : Quentin Tarantino
year : 1994
actors : [
 John Travolta
 Uma Thurman
]
db.movies.insert({title:'Pulp Fiction',writer:'Quentin Tarantino',year:1994,actors:['John Travolta','Uma Thurman']})

3. title : Inglorious Basterds
writer : Quentin Tarantino
year : 2009
actors : [
 Brad Pitt
 Diane Kruger
 Eli Roth
]
db.movies.insert({title:'Inglorious Basterds',writer:'Quentin Tarantino',year:2009,actors:['Brad Pitt','Diane Kruger','Eli Roth']})

4. title : The Hobbit: An Unexpected Journey
writer : J.R.R. Tolkein
year : 2012
franchise : The Hobbit
db.movies.insert({title:'The Hobbit: An Unexpected Journey',writer:'J.R.R. Tolkien',year:2012,franchise: 'The Hobbit'})

5. title : The Hobbit: The Desolation of Smaug
writer : J.R.R. Tolkein
year : 2013
franchise : The Hobbit
db.movies.insert({title:'The Hobbit: The Desolation of Smaug',writer:'J.R.R. Tolkien',year:2013,franchise:'The Hobbit'})

6. title : The Hobbit: The Battle of the Five Armies
writer : J.R.R. Tolkein
year : 2012
franchise : The Hobbit
synopsis : Bilbo and Company are forced to engage in a war against an array of
combatants and keep the Lonely Mountain from falling into the hands of a rising
darkness.
db.movies.insert({title:'The Hobbit: The Battle of Five Armies',writer:'J.R.R. Tolkien',year:2012,franchise:'The Hobbit',synopsis:'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'})

7. title : Pee Wee Herman's Big Adventure
db.movies.insert({title:'Avatar'})

8. title : Avatar
db.movies.insert({title:"Pee Wee Herman's Big Adventure"})

Find Documents-
============

1. Get all documents.
db.movies.find()

2. Get all documents with writer set to "Quentin Tarantino".
db.movies.find({writer:"Quentin Tarantino"})

3. Get all documents where actors include "Brad Pitt".
db.movies.find({actors:"Brad Pitt"})

4. Get all documents with franchise set to "The Hobbit".
db.movies.find({franchise:"The Hobbit"})

5. Get all movies released in the 90s.
db.movies.find({$and: [{year:{$gt:1900}},{year:{$lt:2000}}]})

6. Get all movies released before the year 2000 or after 2010.
db.movies.find({year:{$lt:2010,$gt:2000}})

Update Documents-
==============

1. add a synopsis to "The Hobbit: An Unexpected Journey" : "A reluctant hobbit,
Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of
dwarves to reclaim their mountain home - and the gold within it - from the
dragon Smaug."
db.movies.update({title:'The Hobbit: An Unexpected Journey'},{$set: {synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited roup of dwarves to reclaim their mountain home = and the gold within it - from the dragon smaug.'} })

2. add a synopsis to "The Hobbit: The Desolation of Smaug" : "The dwarves,
along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim
Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a
mysterious and magical ring."
db.movies.update({title:'The Hobbit: The desolation of Smaug'},{$set: {synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious magical ring.'}})

3. add an actor named "Samuel L. Jackson" to the movie "Pulp Fiction."
db.movies.update({title:'Pulp Fiction'},{$push:{actors: Samuel L. Jackson}})

Text Search-
========

db.movies.createIndex({synopsis:'text'})

1. Find all movies that have a synopsis that contains the word "Bilbo"
db.movies.find({$text:{$search:'Bilbo'}})

2. Find all movies that have a synopsis that contains the word "Gandalf"
db.movies.find({$text:{$search:'Gandalf'}})

3. Find all movies that have a synopsis that contains the word "Bilbo" and not the
word "Gandalf"
db.movies.find({$text:{$search:'Bilbo -Gandalf'}})                

4. Find all movies that have a synopsis that contains the word "dwarves" or
"hobbit"
db.movies.find({$text:{$search:'dwarves hobbit'}})          

5. find all movies that have a synopsis that contains the word "gold" and
"dragon"
db.movies.find({$text:{$search:"'gold' 'dragon'"}})           

Delete Documents-
============

1. Delete the movie "Pee Wee Herman's Big Adventure"
db.movies.remove({title: "Avatar"})

2. Delete the movie "Avatar"
db.movies.remove({title: "Pee Wee Herman's Big Adventure"})

Relationships-
=========
Insert the following documents into a "users" collection.

db.createCollection('users')

db.users.insertMany([

{  username: "GoodGuyGreg", first_name:"Good Guy",last_name:"Greg"},
{  username: "ScumbagSteve", full_name:{first_name:"Scumbag",last_name:"Steve"} }
  ]);

db.posts.insertMany([

{  username: "GoodGuyGreg", title:"Passes out at party",body:"Wakes up early and cleans house"},
{  username: "GoodGuyGreg", title:"Steals your identity",body:"Raises your credit score"},

{  username: "GoodGuyGreg", title:"Reports a bug in your code",body:"Sends you a pull request"},

{  username: "ScumbagSteve", title:"Borrows something",body:"Sells it"},

{  username: "ScumbagSteve", title:"Borrows everything",body:"The end"},

{  username: "ScumbagSteve", title:"Forks your repo on github",body:"Sets to private"}
  ]);

db.comments.insertMany([

{  username: "GoodGuyGreg", comment:"Hope you got a good deal!",post:"607f49ca845ea1cba8e2ij18"},
{  username: "GoodGuyGreg", comment:"What's mine is yours!",post:"607f49ca845ea1cba8e2ij19"},

{  username: "GoodGuyGreg", comment:"Don't violate the licensing agreement!",post:"607f49ca845ea1cba8e2ij20"},

{  username: "ScumbagSteve", comment:"It still isn't clean",post:"607f49ca845ea1cba8e2ij21"},

{  username: "ScumbagSteve", comment:"Denied your PR cause I found a hack",post:"607f49ca845ea1cba8e2ij22"}
  ]);

1. Find all users.
db.users.find()

2. Find all posts.
 db.posts.find()

3. Find all posts that was authored by "GoodGuyGreg".
db.posts.find({username:"GoodGuyGreg"})

4. find all posts that was authored by "ScumbagSteve".
db.posts.find({username:"ScumbagSteve"})

5. Find all comments.
db.comments.find()

6. Find all comments that was authored by "GoodGuyGreg".
 db.comments.find({username:"GoodGuyGreg"})

7. Find all comments that was authored by "ScumbagSteve".
db.comments.find({username:"ScumbagSteve"})